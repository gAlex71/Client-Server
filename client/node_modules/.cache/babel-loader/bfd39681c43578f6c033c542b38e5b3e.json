{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041C\\u043E\\u0438 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\\\\javaScript\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\JS\\\\projects\\\\client_server\\\\client\\\\src\\\\components\\\\WebSocket.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport axios from 'axios'; // import WebSocket from 'ws'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WebSock = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [value, setValue] = useState('');\n  const socket = useRef();\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n\n  function connect() {\n    //Создаем новый объект сокета\n    socket.current = new WebSocket('ws://localhost:5000'); //Слушатель, который отработает в момент подключения\n\n    socket.current.onopen = () => {\n      setConnected(true);\n      const message = {\n        event: 'connection',\n        username,\n        id: Date.now()\n      }; //Отправляем сообщение на сервер\n\n      socket.current.send(JSON.stringify(message));\n    }; //Слушатель, который отработает при получении сообщения\n\n\n    socket.current.onmessage = event => {\n      const message = JSON.parse(event.data);\n      setMessages(prev => [message, ...prev]);\n    }; //Слушатель, который отработает в момент отключения\n\n\n    socket.current.onclose = () => {\n      console.log('Socket закрыт');\n    }; //Слушатель, который отработает при ошибке\n\n\n    socket.current.onerror = () => {\n      console.log('Произошла ошибка');\n    };\n  } //Отправка сообщения на сервер\n\n\n  const sendMessage = async () => {\n    const message = {\n      username,\n      mess\n    };\n  };\n\n  if (!connected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          type: \"text\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: e => setValue(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map(mess => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: mess.event === 'connection' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection_message\",\n            children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \", mess.username, \" \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u043B\\u0441\\u044F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [mess.username, \". \", mess.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 35\n          }, this)\n        }, mess.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WebSock, \"3cT4WsfcDEqSZabjdtTXiO9x12k=\");\n\n_c = WebSock;\nexport default WebSock;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSock\");","map":{"version":3,"names":["useState","useRef","axios","WebSock","messages","setMessages","value","setValue","socket","connected","setConnected","username","setUsername","connect","current","WebSocket","onopen","message","event","id","Date","now","send","JSON","stringify","onmessage","parse","data","prev","onclose","console","log","onerror","sendMessage","mess","e","target","map"],"sources":["D:/Мои работы/javaScript/Обучение/JS/projects/client_server/client/src/components/WebSocket.jsx"],"sourcesContent":["import { useState, useRef } from \"react\";\r\nimport axios from 'axios'\r\n// import WebSocket from 'ws'\r\n\r\nconst WebSock = () => {\r\n    const [messages, setMessages] = useState([])\r\n    const [value, setValue] = useState('')\r\n    const socket = useRef()\r\n    const [connected, setConnected] = useState(false)\r\n    const [username, setUsername] = useState('')\r\n\r\n    function connect(){\r\n        //Создаем новый объект сокета\r\n        socket.current = new WebSocket('ws://localhost:5000')\r\n\r\n        //Слушатель, который отработает в момент подключения\r\n        socket.current.onopen = () => {\r\n            setConnected(true)\r\n            const message = {\r\n                event: 'connection',\r\n                username,\r\n                id: Date.now()\r\n            }\r\n            //Отправляем сообщение на сервер\r\n            socket.current.send(JSON.stringify(message))\r\n        }\r\n        //Слушатель, который отработает при получении сообщения\r\n        socket.current.onmessage = (event) => {\r\n            const message = JSON.parse(event.data)\r\n            setMessages(prev => [message, ...prev])\r\n        }\r\n        //Слушатель, который отработает в момент отключения\r\n        socket.current.onclose = () => {\r\n            console.log('Socket закрыт')\r\n        }\r\n        //Слушатель, который отработает при ошибке\r\n        socket.current.onerror = () => {\r\n            console.log('Произошла ошибка')\r\n        }\r\n    }\r\n\r\n    //Отправка сообщения на сервер\r\n    const sendMessage = async () => {\r\n        const message = {\r\n            username,\r\n            mess\r\n        }\r\n    }\r\n\r\n    if(!connected){\r\n        return(\r\n            <div className=\"center\">\r\n                <div className=\"form\">\r\n                    <input value={username} onChange={e => setUsername(e.target.value)} type=\"text\" placeholder=\"Введите имя\"/>\r\n                    <button onClick={connect}>Войти</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"center\">\r\n            <div>\r\n                <div className=\"form\">\r\n                    <input value={value} onChange={e => setValue(e.target.value)} type=\"text\"/>\r\n                    <button onClick={sendMessage}>Отправить</button>\r\n                </div>\r\n                <div className=\"messages\">\r\n                    {messages.map(mess =>\r\n                        <div key={mess.id}>\r\n                            {mess.event === 'connection'\r\n                                ? <div className=\"connection_message\">Пользователь {mess.username} подключился</div>\r\n                                : <div className=\"message\">{mess.username}. {mess.message}</div>\r\n                            }\r\n                        </div>    \r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WebSock"],"mappings":"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"},"metadata":{},"sourceType":"module"}